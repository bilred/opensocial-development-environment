/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

package com.googlecode.osde.internal.jscompiler;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IMarker;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.CoreException;

/**
 * Reports errors/warnings generated by a JavaScript compiler.
 *
 * @author Dolphin Chi-Ngai Wan
 */
public class JavaScriptCompilerReporter {
    private static final String MARKER_ID =
            "com.googlecode.osde.markers.JsCompileMarker";

    /**
     * Clears all existing indicators annotated in a file.
     */
    public void clear(IFile source) throws CoreException {
        source.deleteMarkers(MARKER_ID, false, IResource.DEPTH_ZERO);
    }

    /**
     * Reports errors or warnings for a JavaScript file.
     * @param file
     * @param message
     * @throws CoreException
     */
    public void reportErrorOrWarning(IFile file, String message) throws CoreException {
        IMarker marker = file.createMarker(MARKER_ID);
        marker.setAttribute(IMarker.MESSAGE, message);

        // TODO: Separate the message into individual file markers.
        marker.setAttribute(IMarker.CHAR_START, 0);
        marker.setAttribute(IMarker.CHAR_END, 0);
        marker.setAttribute(IMarker.LINE_NUMBER, 1);
        marker.setAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR);
    }
}
